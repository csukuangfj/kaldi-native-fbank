name: windows-x64

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: windows-x64-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  windows_x64:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.vs-version }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - vs-version: vs2015
            toolset-version: v140
            os: windows-2019

          - vs-version: vs2017
            toolset-version: v141
            os: windows-2019

          - vs-version: vs2019
            toolset-version: v142
            os: windows-2022

          - vs-version: vs2022
            toolset-version: v143
            os: windows-2022

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure CMake
        shell: bash
        run: |
          mkdir build
          cd build
          cmake -T ${{ matrix.toolset-version}},host=x64 -D CMAKE_BUILD_TYPE=Release ..


      - name: Build kaldi-native-fbank for windows
        shell: bash
        run: |
          cd build
          cmake --build . --target ALL_BUILD --config Release
          cat CMakeCache.txt

      - name: Run tests for windows
        shell: bash
        run: |
          cd build
          ctest --verbose -C Release --output-on-failure -E py

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install Python dependencies
        shell: bash
        run: |
          export KALDI_NATIVE_FBANK_CMAKE_ARGS="-T ${{ matrix.toolset-version}},host=x64 -A x64"
          python3 -m pip install --upgrade pip pytest
          python3 -m pip install wheel twine setuptools

      - name: Build Python
        shell: bash
        run: |
          export KALDI_NATIVE_FBANK_CMAKE_ARGS="-T ${{ matrix.toolset-version}},host=x64 -A x64"
          python3 setup.py install

      - name: Display Python package version
        shell: bash
        run: |
          python3 -c "import kaldi_native_fbank; print(kaldi_native_fbank.__version__)"

      - name: Run Python tests
        shell: bash
        run: |
          cd kaldi-native-fbank/python/tests
          python3 ./test_fbank_options.py
          python3 ./test_frame_extraction_options.py
          python3 ./test_mel_bank_options.py
